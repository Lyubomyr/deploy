upstream <%= fetch(:application) %> {
  server unix:<%= fetch(:unicorn_sock_path) %> fail_timeout=0;
}

server {
  listen 80;
  listen [::]:80;
  server_name <%= fetch(:nginx_server_name) %>;
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name www.<%= fetch(:nginx_server_name) %>;
  return 301 https://$server_name$request_uri;
}


server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  server_name <%= fetch(:nginx_server_name) %>;


  ssl_certificate /etc/letsencrypt/live/<%= fetch(:nginx_server_name) %>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<%= fetch(:nginx_server_name) %>/privkey.pem;

  ssl on;
  ssl_prefer_server_ciphers  on;
  ssl_session_timeout        180m;
  ssl_session_cache  builtin:1000  shared:SSL:10m;
  ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

  add_header Strict-Transport-Security 'max-age=31536000';

  root <%= fetch(:current_path) %>/public;

  # Static content
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location /monit/ {
    rewrite ^/monit/(.*) /$1 break;
    proxy_ignore_client_abort on;
    proxy_pass   http://127.0.0.1:2812;
    proxy_set_header Host $host;
  }

  try_files $uri/index.html $uri @unicorn;

  location @unicorn {
    proxy_pass http://<%= fetch(:application) %>;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Ssl on; # Optional
    proxy_set_header  X-Forwarded-Port $server_port;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }

  error_page 503 @503;

  # Return a 503 error if the maintenance page exists.
  if (-f <%= fetch(:shared_path) %>/public/system/maintenance.html) {
    return 503;
  }

  location @503 {
    # Serve static assets if found.
    if (-f $request_filename) {
      break;
    }

    # Set root to the shared directory.
    root <%= fetch(:shared_path) %>/public;
    rewrite ^(.*)$ /system/maintenance.html break;
  }

  client_max_body_size 20M;
  keepalive_timeout 10;
}
