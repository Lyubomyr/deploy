#!/bin/sh
### BEGIN INIT INFO
# Provides:          unicorn
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Manage unicorn server
# Description:       Start, stop, restart unicorn server for a specific application.
### END INIT INFO
set -e

USAGE="Usage: $0 <start|stop|restart|upgrade|rotate|force-stop>"

# app settings
USER=<%= fetch(:user) %>
APP_NAME=<%= fetch(:application) %>
APP_ROOT=<%= fetch(:app_home_path) %>

# environment settings
CMD="<%= fetch(:bundle_exec) %> unicorn -c $APP_ROOT/current/config/unicorn.rb -E <%= fetch(:rails_env) %> -D"
PID="$APP_ROOT/shared/pids/unicorn.pid"
OLD_PID="$PID.oldbin"

# make sure the app exists
cd $APP_ROOT || exit 1

sig () {
  test -s "$PID" && kill -$1 `cat $PID`
}

oldsig () {
  test -s $OLD_PID && kill -$1 `cat $OLD_PID`
}

case $1 in
  start)
    sig 0 && echo >&2 "$APP_NAME is already running" && exit 0
    echo "Starting $APP_NAME"
    su - $USER -c "$CMD"
    ;;

  stop)
    sig QUIT && echo "Stopping $APP_NAME" exit 0
    echo >&2 "Not running"
    ;;

  force-stop)
    sig TERM && echo "Force-stopping $APP_NAME" && exit 0
    echo >&2 "Not running"
    ;;

  restart)
    sig QUIT && echo "Restarting $APP_NAME" && sleep 2 && su - $USER -c "$CMD" && exit 0
    echo >&2 "Couldn't reload, starting '$CMD' instead"
    su - $USER -c "$CMD"
    ;;

  upgrade)
    sig USR2 && echo reloaded OK && exit 0
    echo >&2 "Couldn't upgrade, starting '$CMD' instead"
    su - $USER -c "$CMD"
    ;;

  # Reloads config file (unicorn.rb) and gracefully restarts all workers. This
  # command won't pick up application code changes if you have `preload_app
  # true` in your unicorn.rb config file.
  reload)
    sig HUP && echo "Reloading configuration for $APP_NAME" && exit 0
    echo >&2 "Couldn't reload configuration."
    ;;

  # A basic status checker. Just checks if the master process is responding to the `kill` command.
  status)
    sig 0 && echo >&2 "$APP_NAME is running." && exit 0
    echo >&2 "$APP_NAME is not running."
    ;;

  rotate)
    sig USR1 && echo rotated logs OK && exit 0
    echo >&2 "Couldn't rotate logs" && exit 1
    ;;
  *)
    echo >&2 $USAGE
    exit 1
    ;;
esac
